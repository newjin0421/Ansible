---
- name: 잡 제어 예제 - HTTPS 서버 구축
  hosts: webservers
  vars_files: vars.yml
  tasks:
    # 0. 필수 사항 점검
    # 1. 패키지 설치 
    # 2. 웹 서비스 기동 
    # 3. 웹 서비스 설정 
    # * notify - handlers
    # * block - rescue  
    # 4. 방화벽에 등록 
  # handlers 

    # 0. 필수 사항 점검
    - name: 최소 메모리 점검 및 배포판 종류 점검
      fail:
        msg: "이 서버는 최소 조건에 만족하지 않습니다."
      # when: (ansible_memtotal_mb <= min_ram_mb) or (ansible_distribution != "CentOS")
      when: >
        ansible_memtotal_mb < min_ram_mb or
        ansible_distribution != "CentOS"

    # 1. 패키지 설치
    - name: 패키지 설치 - httpd, mod_ssl
      yum:
        name: "{{ packages }}"
        state: latest

    # 2. 웹 서비스 기동
    - name: 서비스 기동 - httpd, firewalld
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items: "{{ services }}"

    # 3. HTTPS 웹 서비스 설정 
    # /etc/pki/tls/certs/localhost.crt 
    # /etc/pki/tls/private/localhost.key 
    # /var/www/html/index.html
    # * notify - handlers
    # * block - rescue 
    - name: HTTPS 인증서 처리 - prikey. pubkey, index.html 
    # 서비스 설정 - SSL, Config file 
      block:
        - name: 디렉토리 생성 및 점검
          file: 
            path: "{{ item }}"
            state: directory
          with_items: "{{ ssl_dir }}"

        - name: 파일 복사 - prikey, pubkey, index.html
          copy:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
          with_items: "{{ web_config_files }}"
          notify: restart web service

      rescue:
        - name: 설정이 적용되지 않았을 때
          debug:
            msg: >
              하나 이상의 파일이 복사되지 않았습니다.
              prikey or pubkey or index.html
              
    # * notify ~ hadlers
    # * block ~ rescue
    # 4. 방화벽에 등록
    - name: 방화벽 등록
      firewalld:
        service: "{{ item }}"
        permanent: true
        state: enabled
        immediate: true
      with_items: "{{ fw_port }}"
      
  # handlers
  handlers:
    - name: restart web service
      service:
        name: "{{ web_service }}"
        state: restarted
